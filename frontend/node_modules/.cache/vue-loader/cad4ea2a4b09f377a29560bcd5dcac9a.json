{"remainingRequest":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nalee/Documents/projects/freelance/auth0-work/frontend/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/src/views/Home.vue","mtime":1587524371784},{"path":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nalee/Documents/projects/freelance/auth0-work/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhhbmQtYnV0dG9uIHsKICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cuZmFjdHNvbmhhbmQuY29tL2ltYWdlcy8xL2hhbmQtbm9kdWxlc0AzeF8xMTEzeDEwMjAucG5nJyk7CiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBib3R0b207CiAgICAmOmhvdmVyIHsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB9Cn0KLm5vLWNsaWNrIHsKICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7Cn0KLmNsaWNrLW5vLXRvdWNoIHsKICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsKfQoudG91Y2hpbmcgewogICAgYmFja2dyb3VuZC1jb2xvcjpsaWdodHBpbmsgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n    <div class=\"container-fluid\">\n      <div class=\"dashboard\">\n        <nav class=\"navbar navbar-dark bg-dark\">\n          <a class=\"navbar-brand\" href=\"#\">\n            <img src=\"https://a.storyblok.com/f/39898/1024x1024/dea4e1b62d/vue-js_logo-svg.png\" width=\"40\" height=\"40\">\n          </a>\n          <div>\n            <img :src=\"$auth.user.picture\" width=\"30\" height=\"30\">\n            <span class=\"text-muted font-weight-light px-2\">{{$auth.user.name}}</span>\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" @click=\"$auth.logout()\">Logout</button>\n          </div>\n        </nav>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport _ from \"lodash\";\nimport io from \"socket.io-client\";\n\nexport default {\n  name: 'BlockGame',\n  data() {\n    return {\n      socket: {},\n      clicking: false,\n\t\t\thold_message: 'Not Holding',\n      error_message: null,\n      //if logged on\n      connected: false,\n      username: null,\n      partner: null,\n      //if sending request for hold hand\n      connecting: false,\n      //two people connecting\n      touching: false,\n      togglehold: false,\n      allowclickhold: true,\n    }\n\t},\n  created() {\n    this.socket = io(\"http://localhost:3000\");\n    this.debouncedHoldHand = _.debounce(this.holdHand, 2000);\n  },\n    mounted() {\n    this.socket.on(\"disconnect-both\", () => {\n      this.connected = false;\n      this.error_message = \"Someone logged out, please refresh!\"\n    })\n    this.socket.on(\"logged-on\", data => {\n      //here data is p1 and p2\n      this.connected = true;\n      this.username = data;\n    });\n    this.socket.on(\"full-room\", data => {\n      this.error_message = \"Sorry, there are already two people in the room.\"\n    });\n    this.socket.on(\"trigger-nohold\", () => {\n      this.triggernohold();\n    });\n      this.socket.on(\"partner-disconnected\", () => {\n      this.partnerdisconnect();\n    });\n    this.socket.on(\"both-holding\", () => {\n      this.touching = true;\n      this.hold_message = 'holding!';\n    });\n    this.socket.on(\"just-you-holding\", () => {\n      this.hold_message = \"You are waiting for your partner\";\n    });\n    this.socket.on(\"partner-let-go\", () => {\n      this.partnerletgo();\n    });\n  },\n    methods:{\n    start: function () {\n\t\t\tif (!this.partner) {\n\t\t\t\tthis.error_message = \"please select a username for you and your partner\";\n\t\t\t\treturn;\n\t\t\t}\n    \tif(!this.clicking){\n\t\t\t\tthis.error_message = null;\n      \tthis.clicking = true;\t\n        this.hold_message = 'searching...';\n        this.debouncedHoldHand();\n      }\n    },\n    starttoggle: function () {\n      if (!this.partner) {\n\t\t\t\tthis.error_message = \"please select a username for you and your partner\";\n\t\t\t\treturn;\n      }\n      if (this.togglehold === true) {\n\n        this.togglehold = false;\n        this.allowclickhold = true;\n        this.end();\n        console.log('this.end was called')\n      } else if (this.togglehold === false) {\n        console.log('something is broke');\n        this.error_message = null;\n        this.togglehold = true;\n        this.allowclickhold = false;\n        this.hold_message = 'searching...';\n        this.debouncedHoldHand();\n      }\n    },\n    end: function () {\n      this.clicking = false;\n      this.hold_message = 'Not Holding';\n      this.socket.emit(\"trigger-nohold\");\n      console.log('trigger nohold was emitted')\n      this.touching = false;\n    },\n    partner_add: function () {\n      if (this.partner) {\n        this.socket.emit(\"add-partner\", this.partner);\n      }\n    },\n    partnerdisconnect: function () {\n      this.clicking = false;\n      this.hold_message = \"Partner Disconnected!\"\n    },\n    partnerletgo: function () {\n      this.clicking = false;\n      this.hold_message = \"Partner Let Go!\";\n      this.touching = false;\n      console.log('partnerletgo function ran')\n    },\n    holdHand: function () {\n      // if (!this.clicking) {\n      //   return;\n      // } implement this back when we remove toggle\n      this.connecting = true;\n\t\t\t\tconsole.log('triggered-hold was emitted');\n        this.socket.emit(\"trigger-hold\");\n      }\n    },\n\n}\n</script>\n\n<style scoped>\n.hand-button {\n    background-image: url('https://www.factsonhand.com/images/1/hand-nodules@3x_1113x1020.png');\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-position: center bottom;\n    &:hover {\n        cursor: pointer;\n    }\n}\n.no-click {\n    background-color: grey;\n}\n.click-no-touch {\n    background-color: lightblue;\n}\n.touching {\n    background-color:lightpink !important;\n}\n</style>"]}]}